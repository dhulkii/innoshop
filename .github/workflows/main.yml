name: Deploy New Docker Containerr

on:
  push:
    branches:
      - main

jobs:
  deploy-container:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Get the short Git commit ID
      - name: Get Commit ID
        id: get_commit
        run: echo "commit_id=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the new Docker image with commit ID
      - name: Build Docker Image
        run: |
          docker build -t php-app:${{ env.commit_id }} -t php-app:latest .

      # Step 5: Push the old container image to DockerHub (if the container exists)
      - name: Push Old Image to DockerHub
        if: always()
        run: |
          if docker ps -a --filter "name=php-app" --format '{{.Names}}' | grep -q '^php-app$'; then
            docker commit php-app old-php-app:backup-$(date +'%Y%m%d%H%M%S')
            docker tag old-php-app:backup-$(date +'%Y%m%d%H%M%S') ${{ secrets.DOCKER_USERNAME }}/php-app:backup-$(date +'%Y%m%d%H%M%S')
            docker push ${{ secrets.DOCKER_USERNAME }}/php-app:backup-$(date +'%Y%m%d%H%M%S')
          fi

      # Step 6: Stop and remove the old container
      - name: Stop and Remove Old Container
        run: |
          if docker ps -a --filter "name=php-app" --format '{{.Names}}' | grep -q '^php-app$'; then
            docker stop php-app
            docker rm php-app
          fi

      # Step 7: Remove the old image from the server
      - name: Remove Old Docker Images
        run: |
          docker images --filter=reference="php-app" --format "{{.ID}}" | xargs -r docker rmi -f

      # Step 8: Push the new image to DockerHub
      - name: Push New Image to DockerHub
        run: |
          docker tag php-app:${{ env.commit_id }} ${{ secrets.DOCKER_USERNAME }}/php-app:${{ env.commit_id }}
          docker tag php-app:latest ${{ secrets.DOCKER_USERNAME }}/php-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:${{ env.commit_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:latest

      # Step 9: Run the new container
      - name: Run New Container
        run: |
          docker run -d --name php-app -p 9001:9001 php-app:latest
