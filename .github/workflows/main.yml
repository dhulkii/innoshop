name: Deploy New Docker Containerrr

on:
  push:
    branches:
      - master

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy-container:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up the SSH key for server connection
      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 3: Add server public key to known_hosts
      - name: Add server public key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # Step 4: SSH into the server and perform deployment
      - name: Deploy on the server
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Set up environment variables
            export COMMIT_ID=$(git -C /home/ubuntu/innoshop rev-parse --short HEAD)

           docker stop php-app

           docker rm php app

           docker system prune -af

          EOF

      # Step 5: Clean up SSH private key
      - name: Clean up SSH private key
        run: |
          rm -f private_key.pem
        if: always()

      # Step 6: Clean up known_hosts file
      - name: Clean up known_hosts file
        run: |
          rm -f ~/.ssh/known_hosts
        if: always()
